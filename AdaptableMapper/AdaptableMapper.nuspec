<?xml version="1.0"?>
<package>
  <metadata>
    <id>AdaptableMapper</id>
    <version>0.14.0-beta20191202-01_unreleased</version>
    <title>AdaptableMapper</title>
    <authors>Davey van Tilburg</authors>
    <owners>Davey van Tilburg</owners>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectUrl>https://github.com/DaveyvanTilburg/XPathSerialization</projectUrl>
    <description>
A package for any to any mapping without hard-coding

See https://github.com/DaveyvanTilburg/AdaptableMapper/ for documentation
    </description>
    <copyright>Copyright 2019</copyright>
    <dependencies>
      <group targetFramework="net472">
        <dependency id="Newtonsoft.Json" version="12.0.2" />
      </group>
    </dependencies>
    <releaseNotes>0.14.0
 - Extend MappingScopeComposite with a slot for Condition
 - Added an EqualsCondition (if GetValueTraversal result equals another GetValueTraversal result, return true)
 - GetValueStaticTraversal (Hardcodes a value to get)
 - Added ListOfValueMutations object so that multiple mutations are possible for a single value, but not defaults to a list (since I think this is less common)
 - Added ReplaceMutation (given a string, have the option to select a substring (through GetValueStringTraversal) of it and replace it with the result of a GetValueTraversal)
 - Added DictionaryReplaceValueMutation (given a string, have the option to select a substring, walk over a dictionary and replace all dictionaryKey hits with the dictionaryValue)
 - Added GetValueStringTraversal as a sub domain of ValueMutations (for traversing to a part within a string)
 - Added SplitCyCharTakePositionStringTraversal (to select a part of a string based on a separator and position)
 - Formats namespace renamed to ValueMutations (more generic for a broader range of functionality)
 - Change: Sets now receive the entire context (not just target object) for more complex decision making or value mutations
 - Change: XmlTraversal is now less picky about resulting time (would previously throw an error if it ended up in a ProcessingInstruction)
 - BugFix: XElementToString no longer omits metadata from the template (such as the declaration and procesingInstructions)
 - BugFix: namespacelessPath implementation should be more robust to different kinds of paths
    </releaseNotes>
    <license type="file">License.txt</license>
  </metadata>
  <files>
    <file src="License.txt" />
  </files>
</package>